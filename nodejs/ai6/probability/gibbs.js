// Gibbs Algorithm 的範例
// 問題：機率式有限狀態機，P(s0=>s1)=0.3, P(s1=>s0)=0.5 ; P(s0=>s0)=0.7, P(s1=>s1)=0.5
// 目標：尋找該「機率式有限狀態機」的穩態，也就是 P(s0) = ?, P(s1)=? 時系統會達到平衡。

function gibbs () {
  var P = [ 0.5, 0.5 ] // 初始機率分佈，隨意設定。
  var Q = [ [0.7, 0.3], [0.5, 0.5] ]
  do {
    console.log('P = %j', P)
    var Pn = [ P[0] * Q[0][0] + P[1] * Q[1][0], P[0] * Q[0][1] + P[1] * Q[1][1] ] // 下一輪的機率分布。
    var diff = [ Pn[0] - P[0], Pn[1] - P[1] ]                // 兩輪間的差異。
    var step = Math.sqrt(diff[0] * diff[0] + diff[1] * diff[1]) // 差異的大小
    P = Pn
  } while (step > 0.001)  // 假如差異夠小的時候，就可以停止了。
  console.log('5/8=%d 3/8=%d', 5 / 8, 3 / 8) // 印出標準答案，以便看看我們找到的答案是否夠接近。
}

gibbs()
