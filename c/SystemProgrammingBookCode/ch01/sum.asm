; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	C:\ccc\SP\code\ch01\sum.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG2466	DB	'sum=%d', 0aH, 00H
$SG2468	DB	'pause', 00H
_DATA	ENDS
PUBLIC	_sum
; Function compile flags: /Odtp
_TEXT	SEGMENT
_s$ = -8						; size = 4
_i$ = -4						; size = 4
_n$ = 8							; size = 4
_sum	PROC
; File c:\ccc\sp\code\ch01\sum.c
; Line 3
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 4
	mov	DWORD PTR _s$[ebp], 0
; Line 6
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN3@sum
$LN2@sum:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@sum:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _n$[ebp]
	jg	SHORT $LN1@sum
; Line 7
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _s$[ebp], edx
; Line 8
	jmp	SHORT $LN2@sum
$LN1@sum:
; Line 9
	mov	eax, DWORD PTR _s$[ebp]
; Line 10
	mov	esp, ebp
	pop	ebp
	ret	0
_sum	ENDP
_TEXT	ENDS
PUBLIC	_main
EXTRN	_system:PROC
EXTRN	_printf:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_sum1$ = -4						; size = 4
_main	PROC
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 13
	push	10					; 0000000aH
	call	_sum
	add	esp, 4
	mov	DWORD PTR _sum1$[ebp], eax
; Line 14
	mov	eax, DWORD PTR _sum1$[ebp]
	push	eax
	push	OFFSET $SG2466
	call	_printf
	add	esp, 8
; Line 15
	push	OFFSET $SG2468
	call	_system
	add	esp, 4
; Line 16
	mov	eax, 1
; Line 17
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
